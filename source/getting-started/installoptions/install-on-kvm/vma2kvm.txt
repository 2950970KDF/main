#!/bin/bash

# Kommentare

# Benötigt xva-img 
# apt install -f
#   cmake
#   libssl-dev
#   libxxhash-dev
#   [g++|clang++]

# IN /opt/
git clone https://github.com/eriklax/xva-img.git
cd xva-img/

# Installation mit
#   cmake .
#   maken
#   make install

# nur nötig bei lokaler Anwendung
wget -A *opnsense*,*server* -m https://download.linuxmuster.net/xcp-ng/v7/latest/

cd download.linuxmuster.net/download.linuxmuster.net/xcp-ng/v7/latest

mkdir xva-uncompressed
tar -xf lmn7-opnsense.xva.gz -C xva-uncompressed
chmod u+r -R xva-uncompressed

xva-img -p disk-export xva-uncompressed/Ref\:1/ lmn7-opnsense.raw


qemu-img convert -f raw -O qcow2 lmn7-opnsense.raw lmn7-opnsense.qcow2


#######Bishieriges###########


I know it is a long time ago, but I had the same question and this post has been kinda left without an answer, so here how I managed this.

1. On your Proxmox do a backup of your VM
2. Decompress the backup to have the .vma
2.1. I did with zstd -d vzdump-qemu-$VMID....vma.zst
3. Extract the vma vma extract vzdump-qemu-$VMID....vma ./$DESTINATION it will give you a .raw file (disk image ) and a .conf file (VM Config)
4. Fire Up your Virtual Machine Manager than import this disk image (.raw) in a new VM.

It worked well for me from Proxmox 6 to QEMU-KVM on Ubuntu 20.04 LTS

Now I wasn't able to manage to make the vma tool run on Ubuntu (issue with libraries version), to avoid that trouble, it is easier to run simply it on a Debian 10 (if you use Promox 6).

For those people who want to convert the raw file into another format such as QCOW2, VDi or VMDK​
it could be accomplish with qemu-img and have nothing to do with Proxmox nor VMA;
a simple qemu-img convert -p -f raw $SOURCE.raw $DESTINATION.vmdk will probably do the job.
 

Ich weiß, es ist eine lange Zeit her, aber ich hatte die gleiche Frage und dieser Beitrag wurde irgendwie ohne eine Antwort verlassen, so hier, wie ich das geschafft.

1. Machen Sie auf Ihrem Proxmox ein Backup Ihrer VM
2. Dekomprimieren Sie das Backup, um die .vma zu erhalten
2.1. Ich habe das mit zstd -d vzdump-qemu-$VMID....vma.zst gemacht
3. https://github.com/jancc/vma-extractor installieren
3.1 Extrahieren Sie die vma vma extract vzdump-qemu-$VMID....vma ./$DESTINATION Sie erhalten eine .raw-Datei (Disk Image ) und eine .conf-Datei (VM Config)
4. Starten Sie Ihren Virtual Machine Manager und importieren Sie dieses Disk-Image (.raw) in eine neue VM.

Es hat bei mir gut funktioniert, von Proxmox 6 zu QEMU-KVM auf Ubuntu 20.04 LTS

Nun habe ich es nicht geschafft, das vma-Tool unter Ubuntu zum Laufen zu bringen (Problem mit der Bibliotheksversion), um diesen Ärger zu vermeiden, ist es einfacher, es einfach auf einem Debian 10 laufen zu lassen (wenn Sie Promox 6 verwenden).

Für diejenigen, die die Rohdatei in ein anderes Format wie QCOW2, VDi oder VMDK konvertieren wollen
kann dies mit qemu-img bewerkstelligt werden und hat nichts mit Proxmox oder VMA zu tun;
ein einfaches qemu-img convert -p -f raw $SOURCE.raw $DESTINATION.vmdk wird wahrscheinlich die Aufgabe erfüllen.

Übersetzt mit www.DeepL.com/Translator (kostenlose Version)
###########################################################
RWA vs QCOW2

Qemu/KVM bietet Unterstützung für verschiedene Image-Formate. Die beiden wichtigsten Festplatten-Image-Formate, die häufig empfohlen und verwendet werden, sind raw und qcow2. Lassen Sie uns also verstehen, was sie sind und worin sie sich unterscheiden.

Ein wichtiger Teil der Virtualisierung ist der Speicher. Der Speicher ermöglicht es der virtualisierten Umgebung, Daten über eine Vielzahl von verschiedenen Methoden zu lesen und zu schreiben. Darüber hinaus ist das Festplatten-Image eine weit verbreitete Methode der Speicherung in der Virtualisierung.

Ein Festplatten-Image in der Virtualisierung repräsentiert einen Datenblock auf der Festplatte. Außerdem ist es eine virtuelle Festplatte für eine virtualisierte Umgebung. Daher ist diese Speichermethode eine dateibasierte Speicherung.
RAW-Datenträgerabbilder

Das Raw-Disk-Image-Format ist das Standardformat in Qemu.

Vorteile der Verwendung von RAW-Disk-Images:

    Es ist einfach und auf jeden anderen Rechner übertragbar.
    Es repräsentiert das Standard-Binärformat einer Festplatte.
    Nahezu rohe Leistung als andere Formate, da es sehr wenig Overhead und keine Metadaten hat und schließlich,
    Nur die geschriebenen Daten belegen den Speicherplatz, der restliche Platz wird mit Nullen gefüllt, da es sich um eine Sparse-Datei handelt.

Nachteile der Verwendung von RAW-Datenträgerabbildern:

    Verfügt nicht über andere Funktionen wie Komprimierung, AES-Verschlüsselung und Snapshot.
    Die Sicherung erfordert ein vollständiges Disk-Up, da keine inkrementelle Sicherung möglich ist,
    Gelöschte Dateien belegen weiterhin Speicherplatz und müssen entfernt werden.

Implementierung

qemu-img create -f raw /var/lib/libvirt/images/sample1.img 5G

Für die Vorallokation der Größe

qemu-img create -f raw -o preallocation=full /var/lib/libvirt/images/sample1.img 5G

Zum Schluss, um zu überprüfen

qemu-img info /var/lib/libvirt/images/beispiel1.img

qcow2 Platten-Images

qcow2 wird auf Write-Image-Disk kopiert, wobei Einheiten konstanter Größe, die Cluster genannt werden, eine Datei zusammensetzen. Ein Cluster enthält sowohl Daten als auch Image-Metadaten.

Vorteile der Verwendung von qcow2 Disk Images:

    Kleinere Bilder werden erzeugt, da keine Sparse-Datei.
    Es bietet zlib-basierte Kompression.
    Für die Datensicherheit kann die AES-Verschlüsselung zum Schutz des Disk-Images verwendet werden.
    Mehrere Snapshots der virtuellen Maschine werden als inkrementelles Backup angeboten.
    Kleine Cluster-Größe verbessert die Größe der Image-Datei, und größere kann für eine bessere Leistung und schließlich verwendet werden,
    Größere Preallocation erhöht die Leistung bei wachsender Image-Größe.

Nachteile der Verwendung von qcow2 Disk Images::

    Sehr geringer Leistungsverlust im Vergleich zum rohen Disk-Image, aufgrund von Metadaten, Kompression und Verschlüsselung und,
    Man muss fstrim zum Trimmen der Image-Datei verwenden, da gelöschte Dateien die Image-Größe erhöhen.

Implementierung

qemu-img create -f qcow2 /var/lib/libvirt/images/sample1.qcow2 5G

Für ein Abbild der Clustergröße von 2M

qemu-img create -f qcow2 -o cluster_size=2M /var/lib/libvirt/images/sample1.qcow2 5G

Für vorallokierte Größe

qemu-img create -f qcow2 -o preallocation=full /var/lib/libvirt/images/sample1.qcow2 5G

Zum Schluss, um zu überprüfen

qemu-img info /var/lib/libvirt/images/beispiel1.qcow2

Fazit: Raw vs. Qcow2: beide haben ihre Vor- und Nachteile, wobei raw die reine Performance bietet, während qcow2 praktische und nützliche Funktionen bietet. Letztendlich kommt es bei der Verwendung des Bildformats auf das Anwendungsszenario an.


Übersetzt mit www.DeepL.com/Translator (kostenlose Version) 
